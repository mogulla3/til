front,back
[ox] ユーザは必ず1つ以上のグループに所属する,正しい
グループには2種類あるが、それは何か,"- 1次グループ：必須。ログイン直後の作業グループ。ファイルやディレクトリを作成した際に、それを所有するグループとして使われる。
- 2次グループ：必要に応じて割り当てられる、1次グループ以外のグループ。複数割り当てることができる"
[command] groupsコマンドは何をするか,"自分または指定したユーザの所属グループを表示する

```
$ groups
vagrant

# ユーザ名を指定することも可能
$ sudo groups sshd
sshd : sshd
```"
[command] idコマンドは何をするか,"自分がどのユーザでログインしているのか、またどのグループに所属しているのかを表示する

```
$ id
uid=1000(vagrant) gid=1000(vagrant) groups=1000(vagrant) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
```"
ファイルまたはディレクトリのパーミッションを確認したい。どうすればいいか？,"ls -lでパーミッション、ファイルの所有者、所有するグループを表示できる

```
# ls -l <file/directory>

$ ls -l fileA
-rw-rw-r--. 1 vagrant vagrant 18 Jan  3 14:27 fileA
```"
ls -lコマンドでファイル・ディレクトリのパーミッションを確認できるが、どのような構成で表示されるか,"以下4つの情報を含む

- ファイルの種類
- ユーザ（所有者）に対するパーミッション
- グループに対するパーミッション
- その他のユーザに対するパーミッション

```
# 例
-rw-rw-r--
```"
【ノート】パーミッション情報に含まれる「ファイルの種類」とその記号,"- `-`：通常ファイル
- `d`：ディレクトリ
- `l`：シンボリックリンク

```
$ ls -l
drwxrwxr-x. 2 vagrant vagrant    33 Aug  3 16:41 bin
-rw-rw-r--. 1 vagrant vagrant    18 Jan  3 14:27 fileA
```"
「-rw-rw-r--」はどういう意味か,通常ファイルであり、所有者と所有グループは読み書き可能で、その他のユーザは読み取りのみ可能である
[ox] パーミッションを表す「r」「w」「x」はファイルかディレクトリで意味が異なる,正しい。ファイルかディレクトリかで意味が変わる
読み取り権限を示す「r」がディレクトリについている場合、どういう意味になるか,ディレクトリの内容を表示することができることを示す。lsなどが実行できる。
書き込み権限を示す「w」がディレクトリについている場合、どういう意味になるか,ディレクトリ内のファイルやディレクトリを作成・削除できることを示す。mkdir、touch、rmなどを実行できる。
実行権限を示す「x」がディレクトリについている場合、どういう意味になるか,ディレクトリへ移動することができることを示す。cdなどを実行できる。
/etc/passwdのパーミッションは何か,"```
-rw-r--r-- root root /etc/passwd
```"
chmodコマンドに指定できるモードは2種類あるが、それは何か,"- シンボリックモード：文字や記号を用いてパーミッションを操作する
- オクタルモード：8進数の数値を使ってパーミッションを操作する

```
# シンボリックモードの例
$ chmod a+x,g-w sample.txt

# オクタルモードの例
$ chmod 755 sample.txt
```"
【ノート】chmodのシンボリックモードは「chmod <user> <operation> <permission>」の形で指定するが、<operation>として次の3つの記号がある,"- +：許可を与える
- -：許可を削除する
- =：許可を設定する"
【ノート】chmodのオクタルモードでの数値の意味,"- 4：読み取り権限
- 2：書き込み権限
- 1：実行権限
- 0：権限なし"
