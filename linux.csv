front,back
SUIDとは何か,"- suid = Set User ID
- 通常、ファイルを実行すると実行者の権限で動作するが、SUIDを設定すると誰が実行してもファイルの所有者のユーザIDが実行プロセスのユーザIDとなる
- SUIDの利用例としてpasswdコマンドがある。passwdコマンドはパスワードを変更するコマンドで、実際には/etc/shadowファイルを編集することになる。しかし、一般ユーザには/etc/shadowファイルを編集する権限はない。そこで、passwdコマンドにSUIDを設定することで、passwdコマンドの所有者であるrootの権限で/etc/shadowファイルを編集できるようになっている。
- SUIDが設定されているファイルは、所有者の実行権限が「s」で表記される
- SUIDを設定する場合は、chmodコマンドで「u+s」もしくは「4000」を指定する
- 注意点として、suidはバイナリの実行ファイルに設定した場合でないと有効化されないという点。例えば任意のシェルスクリプトにSUIDを設定しても効果がない（実際、これでハマった）。

```
$ sudo chmod u+s hello.sh
$ ls -l hello.sh
-rwSrw-r--. 1 vagrant vagrant 0 Aug 12 05:47 hello.sh
```"
SGIDとは何か,"- sgid = Set Group ID
- SGIDは実行ファイルまたはディレクトリに設定できる属性で、どちらに設定するかで効果が変わる
- 実行ファイルにSGIDを設定した場合：SUIDと同じく、そのファイルのグループIDが実行プロセスのグループIDとなる
- ディレクトリにSGIDを設定した場合：そのディレクトリ配下で作成したファイルおよびディレクトリの所有グループは、自動的に親ディレクトリのグループIDになる
- SGIDが設定されているファイル・ディレクトリは、グループの実行権限が「s」で表記される
- SGIDを設定する場合は、chmodコマンドで「g+s」もしくは「2000」を指定する

```
$ mkdir sgid_dir
$ sudo chmod g+s sgid_dir
$ ls -l
drwxrwsr-x. 2 vagrant vagrant  6 Aug 12 06:36 sgiddir2
```"
Sticky Bitとは何か,"- StickyBitはUNIXシステム上のファイルやディレクトリに対して設定されるアクセス権を表すフラグ
- ディレクトリに対して使う場合が一般的であり、セットされるとディレクトリ配下のファイルの名称変更と削除は、実際のパーミッションとは関係なくそのファイルの所有者とスーパユーザしかできなくなる。セットされていない場合、書き込みおよび実行のファイルパーミッションを持つユーザなら誰でも名称変更と削除が可能。
- /tmpはSticky Bitの実用例。全てのユーザがファイル・ディレクトリを作成できるが、作成したファイル・ディレクトリは他人には消せない動作になる。
- StickyBitが設定されているファイルは、その他のユーザの実行権限が「t」で表記される
- StickyBitを設定する場合は、chmodコマンドで「o+t」もしくは「1000」を指定する

```
$ mkdir sticky_dir
$ chmod o+t sticky_dir
$ ls -l
drwxrwxr-t. 2 vagrant vagrant  6 Aug 12 06:53 sticky_dir
```"
