front,back
カーネルとは何か,全てのコンピュータシステムにはオペレーティングシステムと呼ばれる基礎的なプログラムの集合があり、その集合の中で最も重要なプログラムのことをカーネルと呼ぶ
カーネルはどこに組み込まれるか,カーネルは起動時にRAMに組み込まれる
オペレーティングシステムが果たさなければならない2つの重要な目的とは何か,"- ハードウェアプラットフォームの構成要素である低水準のプログラマブルなハードウェアを制御する
- コンピュータシステム上で実行するアプリケーション（いわゆるユーザプログラム）に対する実行環境を提供する"
UNIX系OSはハードウェアを直接操作することをユーザプログラムに認めているか否か,"認めていない。ユーザが実行するアプリケーションに対してコンピュータの物理的な構成に関わる低水準な詳細は全て隠蔽されている。
ハードウェア資源を使いたい時は、OSに要求を発行しなければならない。"
ユーザモードとカーネルモードとは何か,"- ユーザモード：ユーザプログラム用の非特権モード
- カーネルモード：カーネルプログラム用の特権モード

この機能はハードウェア（CPU）の実行モードを利用して実現されている"
マルチユーザシステムとは何か,"2人以上のユーザが様々なアプリケーションを並行して独立に実行することが可能なコンピュータのこと。
「並行して」とは、複数のアプリケーションが同時に動作状態になり、CPU・メモリ・ディスクなどの資源を取り合うことができるという意味である。
「独立に」とは他のアプリケーションの動作とは無関係に各アプリケーションが自身の処理を実行できることを意味する。"
マルチユーザOSに必要な機能とは何か,"- ユーザIDを確認する認証機構
- 同じシステム上で動作している他のアプリケーションの動きを止めてしまう可能性のあるバグを持つユーザプログラムに対する保護機構
- 他のユーザの処理に干渉したりのぞき見したりする可能性のある、悪意のあるユーザプログラムに対する保護機構
- 各ユーザに割り当てる資源の量を制限するアカウンティング機構"
UIDとは何か,ユーザID（User ID）のこと。ユーザを一意に識別する役割を担う。
GIDとは何か,"ユーザグループID（user Group ID）のこと。ユーザグループを一意に識別する役割を担う。
各ファイルは必ず1つのグループに属する。"
プロセスとは何か,「実行中のプログラムのインスタンス」または動作中のプログラムの「実行コンテキスト」と定義できる。
アドレス空間とは何か,プロセスに参照することが許されているメモリアドレスの集合
マルチプログラミングシステムあるいはマルチプロセッシングシステムとは何か,複数のプロセスが同時に動作状態になることが可能なシステムのこと
マルチユーザシステム環境におけるプロセスは、プリエンプト不可（nonpreemptive）かそれともプリエンプト可能（preemptive）か,"プリエンプト可能。
OSは各プロセスがCPUを獲得していた時間を管理し、定期的にスケジューラを作動させる。"
プロセス／カーネルモデルとは何か,各プロセスは自分がマシン上の唯一のプロセスであり、オペレーティングシステムのサービスを専有していると錯覚している。
UNIXにおけるファイルとはなにか,バイトの列として構造化された情報の入れ物
ディレクトリ中の「ファイル名」はなんと呼ばれているか,"ファイルハードリンク（file hard link）あるいは単純にリンク（link）と呼ばれる
1つのファイルの実体は、複数のファイル名を持つことができる"
パス名p1によって識別されるファイルに対し、パス名2の新しいハードリンクを作成するときのコマンドは何か,"```
$ ln p1 p2
```"
ハードリンクの2つの制限とは何か,"- ディレクトリのハードリンクを作成することができない。これによりディレクトリツリーが循環グラフとなって、名前からファイルの位置を特定できない可能性があるため。
- リンクは同じファイルシステムに含まれているファイルに対してのみ生成することができる。これは深刻な制限で、近代的なUNIXシステムは異なるディスクやパーティションに位置する複数のファイルシステムを含んでいる可能性がある。"
ソフトリンク（シンボリックリンク）とは何か,"別のファイルへの任意のパス名を含む小さなファイルのこと。パス名はどのファイルシステムに存在するファイルまたはディレクトリを参照しても構わない。さらには、存在しないファイルを指し示すことも可能。ハードリンクの問題を解決するために導入された

次のコマンドは、パス名p1を参照する、パス名がp2である新しいソフトリンクを作成する
```
$ ln -s p1 p2
```"
UNIXにおけるファイルの種類を全て,"- 通常ファイル
- ディレクトリ
- シンボリックリンク
- ブロック型デバイスファイル
- キャラクタ型デバイスファイル
- パイプ、名前付きソケット（named pipe、FIFOとも呼ばれる）
- ソケット"
デバイスファイルとは何か,"I/Oデバイスと、カーネルに組み込まれたデバイスドライバに対応するもの
例えばあるプログラムがデバイスファイルにアクセスすると、そのプログラムはそのデバイスファイルに対応するI/Oデバイスに直接アクセスすることになる。"
